user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

events {
	worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging settings
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Set client body size limit
    client_max_body_size 10M;

    # Keepalive settings
    keepalive_timeout 65;

    # Gzip compression settings
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_min_length 1000;
    gzip_vary on;

    # Caching settings
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=1g inactive=60m use_temp_path=off;

    server {
        listen 80;
        server_name localhost;

        # Redirect HTTP traffic to HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name localhost;

        ssl_certificate /etc/ssl/certs/tr-cert.crt;
        ssl_certificate_key /etc/ssl/private/tr-private.key;

        # Configuration of additional SSL policies
        # Specifies which versions of TLS should be used to establish secure HTTPS connections
        ssl_protocols TLSv1.2 TLSv1.3;

        # This option indicates that Nginx should give priority to its own encryption algorithms over those of the client
        ssl_prefer_server_ciphers on;

        # Defines a list of encryption algorithms that the server can use to establish a secure connection.
            # 'HIGH' selects high security ciphers
            # '!aNULL' excludes ciphers that do not use authentication
            # '!MD5' excludes ciphers using the MD5 algorithm, which is considered insecure
        ssl_ciphers 'HIGH:!aNULL:!MD5';

        # Prevents the browser from trying to interpret files in other MIME types
        add_header X-Content-Type-Options "nosniff";

        # Prevent your application from being displayed in iframes, preventing clickjacking attacks
        add_header X-Frame-Options "DENY";

        # Enables protection against XSS attacks in older browsers
        add_header X-XSS-Protection "1; mode=block";

        # Block insecure traffic. Forces the browser to use HTTPS only
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        location /media/ {
            alias /app/media/;
        }

        # Frontend proxy
        location / {
            proxy_pass http://frontend:5173;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Backend proxy
        location /api/ {
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}