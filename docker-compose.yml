version: '3.8'

services:
  frontend:
    container_name: frontend
    build:
      context: ./ft_transcendence_frontend
    ports:
      - "5173:80"
    networks:
      - app-network
    depends_on:
      - backend

  backend:
    container_name: backend
    build:
      context: ./ft_transcendence_backend
    volumes:
      - ./ft_transcendence_backend/media:/app/media
    env_file:
      - ./ft_transcendence_backend/backend/.env
    expose:
      - "8000"
    networks:
      - app-network
    depends_on:
      - postgres

  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app-network

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt
    networks:
      - app-network
    depends_on:
      - backend
      - frontend
      - certbot

  certbot:
    image: certbot/certbot
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt
    entrypoint: /bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'
    networks:
      - app-network
volumes:
  db_data:
  media: 
networks:
  app-network:
